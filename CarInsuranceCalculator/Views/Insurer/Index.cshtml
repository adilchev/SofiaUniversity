@using PagedList.Mvc
@model PagedList.IPagedList<CarInsuranceCalculator.Data.Models.Insurer>

@{
    ViewData["Title"] = "Index";
}
@if (User.IsInRole("Admin"))
{
    <h2>List of insurers</h2>
}
else
{
    <h2>Insurer information</h2>
}

@if (User.IsInRole("Insurer"))
{
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Maximum Discount
                </th>
                <th>
                    Email
                </th>
                <th>
                    Phone Number
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                @if (item.Id == ViewBag.CurrentUser)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MaximumDiscount)
                        </td>
                        <td>
                            @{
                                List<ApplicationUser> users = ViewBag.Users;
                                var user = users.FirstOrDefault(u => u.Id == item.ApplicationUserId);
                                item.ApplicationUser = user;
                            }
                            @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ApplicationUser.PhoneNumber)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
else if (User.IsInRole("Admin"))
{
    <p>
        <a asp-action="Create">Register</a>
    </p>
    <table class="table table-striped">
        <thead class="thead-dark">
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Maximum Discount
                </th>
                <th>
                    Email
                </th>
                <th>
                    Phone Number
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MaximumDiscount)
                    </td>
                    <td>
                        @{
                            List<ApplicationUser> users = ViewBag.Users;
                            var user = users.FirstOrDefault(u => u.Id == item.ApplicationUserId);
                            item.ApplicationUser = user;
                        }
                        @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ApplicationUser.PhoneNumber)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-page="@(Model.PageNumber - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-page="@(Model.PageNumber + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>